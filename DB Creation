from sqlalchemy import create_engine, Column, Integer, DateTime, ForeignKey
from sqlalchemy.orm import declarative_base, relationship
from datetime import datetime

# Configure the SQLAlchemy engine for connection to your PostgreSQL database
engine = create_engine('postgresql://docker:docker@localhost:5432/exampledb')

# Create a base class for table declaration
Base = declarative_base()

# Define your model class for the warehouse stock
class WarehouseStock(Base):
    __tablename__ = 'warehouse_stock'
    id = Column(Integer, primary_key=True)
    product_id = Column(Integer, unique=True, nullable=False)
    quantity = Column(Integer, nullable=False)

# Define your model class for orders
class Order(Base):
    __tablename__ = 'orders'
    id = Column(Integer, primary_key=True)
    order_number = Column(Integer, nullable=False)
    order_date = Column(DateTime, default=datetime.utcnow)
    product_id = Column(Integer, ForeignKey('warehouse_stock.product_id'), nullable=False)
    quantity = Column(Integer, nullable=False)
    warehouse_stock = relationship('WarehouseStock', back_populates='orders')

# Define your model class for supplier requests
class SupplierRequest(Base):
    __tablename__ = 'supplier_requests'
    id = Column(Integer, primary_key=True)
    request_date = Column(DateTime, default=datetime.utcnow)
    product_id = Column(Integer, nullable=False)
    quantity = Column(Integer, nullable=False)

# Create tables in the database
Base.metadata.create_all(engine)

